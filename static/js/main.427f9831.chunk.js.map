{"version":3,"sources":["fbase.js","clock.jpg","routes/Auth.js","components/Sweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","authService","initializeApp","getAuth","dbService","getFirestore","Auth","userObj","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSocialClick","event","a","name","target","provider","GoogleAuthProvider","window","alert","location","reload","signInWithPopup","data","console","log","onChange","value","onSubmit","preventDefault","createUserWithEmailAndPassword","updateProfile","displayName","signInWithEmailAndPassword","message","className","src","logo","style","marginBottom","width","type","placeholder","required","onClick","prev","icon","faGoogle","Sweet","sweetObj","isOwner","creatorId","editing","setEditing","text","newSweet","setNewSweet","toggleEditing","e","updateDoc","doc","id","display","flexDirection","justifyContent","alignItems","border","autoFocus","marginTop","color","fontSize","ok","confirm","deleteDoc","faTrash","faPencilAlt","align","size","Home","sweet","setSweet","sweets","setSweets","useEffect","onSnapshot","collection","snapshot","newArray","docs","map","document","addDoc","createdAt","Date","now","uid","Profile","history","useHistory","newDisplayName","setNewDisplayName","padding","margintTop","signOut","push","Navigation","page","setPage","to","position","top","right","faUser","faClock","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setIsLoggedIn","setuserObj","onAuthStateChanged","user","getFullYear","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.427f9831.chunk.js","sourcesContent":["// import firebase from \"firebase/app\";\n// import \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// const app = initializeApp(firebaseConfig);\n// initializeApp(firebaseConfig);\n\n// firebaseConfig.initializeApp(firebaseConfig);\n// export const authService = firebase.auth();\n\nconst app = initializeApp(firebaseConfig);\nexport const authService = getAuth();\nexport const firebaseInstance = getAuth();\nexport const dbService = getFirestore();\n","export default __webpack_public_path__ + \"static/media/clock.d29eb7ae.jpg\";","import { authService, firebaseInstance } from \"fbase\";\nimport { useState } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n  GoogleAuthProvider,\n  updateProfile,\n} from \"firebase/auth\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport logo from \"../clock.jpg\";\n\nconst Auth = (userObj) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"anonymous\") {\n      // provider = new firebaseInstance.auth.GithubAuthProvider();\n      // setEmail(\"anonymous\");\n      // setPassword(\"anonymous\");\n      window.alert(\"마감시간이 촉박해서 구현을 못했다 흑흑\");\n      window.location.reload();\n    }\n    // const data = await signInWithPopup(authService, provider);\n    const data = await signInWithPopup(authService, provider);\n\n    console.log(data);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault(); //새로고침 방지\n    try {\n      let data;\n      if (newAccount) {\n        //create newAccount\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n        updateProfile(userObj, { displayName: \"익명\" });\n      } else {\n        //log in\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <img src={logo} style={{ marginBottom: 30, width: \"8%\" }} />\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"이메일\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"비밀번호\"\n          required\n          value={password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"회원가입\" : \"로그인\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <button onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount\n          ? \"이미 비밀번호가 있으신가요? 로그인\"\n          : \"에브리선달이 처음이신가요? 회원가입\"}\n      </button>\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Google로 로그인 <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"anonymous\" className=\"authBtn\">\n          익명으로 시작하기\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService } from \"fbase\";\nimport { doc, deleteDoc, updateDoc } from \"@firebase/firestore\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTractor } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport anony from \"../anony.png\";\n\nconst Sweet = ({ sweetObj, isOwner, creatorId, userObj }) => {\n  const [editing, setEditing] = useState(false);\n  const [newSweet, setNewSweet] = useState(sweetObj.text);\n\n  // const tlrks = (ts) => {\n  //   var date = new Date(ts);\n  //   return date;\n  // };\n\n  const onDeleteClick = () => {\n    const ok = window.confirm(\"삭제할거임?\");\n    console.log(ok);\n    if (ok) {\n      console.log(sweetObj.id);\n      deleteDoc(doc(dbService, \"sweets\", sweetObj.id));\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewSweet(value);\n  };\n\n  const onSubmit = (e) => {\n    console.log(\"eho\");\n    e.preventDefault();\n    // if ((sweet = \"\")) {\n    //   return;\n    // }\n    updateDoc(doc(dbService, \"sweets\", sweetObj.id), { text: newSweet });\n    setEditing(false);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              marginBottom: \"20px\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n            }}\n          >\n            <button\n              onClick={toggleEditing}\n              className=\"formBtn cancelBtn\"\n              style={{ border: \"none\", width: \"10px\" }}\n            >\n              x\n            </button>\n            <input\n              type=\"submit\"\n              value=\"완료\"\n              className=\"factoryInput__arrow\"\n              onClick={onSubmit}\n            />\n          </div>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              onChange={onChange}\n              value={newSweet}\n              required\n              placeholder=\"수정하던가\"\n              autoFocus\n              className=\"forInput\"\n            />\n          </form>\n        </div>\n      ) : (\n        <div className=\"didi\">\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              marginBottom: \"15px\",\n            }}\n          >\n            <div className=\"profile\"></div>\n            익명\n          </div>\n          <h4>{sweetObj.text}</h4>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              marginTop: \"20px\",\n            }}\n          >\n            <span style={{ color: \"grey\", fontSize: \"0.8em\" }}>\n              {creatorId}\n            </span>\n            {isOwner && (\n              <div className=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrash} color=\"#c92718\" />\n                </span>\n                <span onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} color=\"#05AAFF\" />\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n      <hr align=\"center\" width=\"100%\" size=\"100%\" color=\"whitesmoke\" />\n    </div>\n  );\n};\n\nexport default Sweet;\n","import { useEffect, useState } from \"react\";\nimport { addDoc, getDocs, onSnapshot, collection } from \"firebase/firestore\";\nimport { dbService } from \"fbase\";\nimport Sweet from \"components/Sweet\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\nimport { faLeaf } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Home = ({ userObj }) => {\n  console.log(userObj);\n  const [sweet, setSweet] = useState(\"\");\n  const [sweets, setSweets] = useState([]);\n\n  // const getSweets = async () => {\n  //   const dbSweets = await getDocs(collection(dbService, \"sweets\"));\n  //   dbSweets.forEach((document) => {\n  //     const sweetObject = { ...document.data(), id: document.id };\n  //     setSweets((prev) => [sweetObject, ...prev]);\n  //   });\n  // };\n\n  useEffect(() => {\n    // getSweets();\n    onSnapshot(collection(dbService, \"sweets\"), (snapshot) => {\n      const newArray = snapshot.docs.map((document) => ({\n        id: document.id,\n        ...document.data(),\n      }));\n      setSweets(newArray);\n    });\n  }, []);\n\n  // collection(\"nweets\").onSnapshot((snpashot) => {\n  //   const newArray = snapshot.docs.map((document) => ({\n  //     id: document.id,\n  //     ...document.data(),\n  //   }));\n  //   setSweets(newArray);\n  // });\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (sweet === \"\") {\n      window.alert(\"내용을 입력하세요!\");\n      return;\n    }\n    await addDoc(collection(dbService, \"sweets\"), {\n      text: sweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n    });\n    setSweet(\"\");\n  };\n\n  const onChange = (event) => {\n    event.preventDefault();\n    const {\n      target: { value },\n    } = event;\n    setSweet(value);\n  };\n\n  return (\n    <div className=\"container\">\n      <div\n      // style={{ display: \"flex\", position: \"sticky\", top: \"0\" }}\n      >\n        <form className=\"factoryInput__container\" onSubmit={onSubmit}>\n          <div>\n            <input\n              value={sweet}\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"내용을 입력하세요\"\n            />\n          </div>\n          <div>\n            <input type=\"submit\" value=\"완료\" className=\"factoryInput__arrow\" />\n          </div>\n        </form>\n      </div>\n\n      <div style={{ marginTop: 10 }}>\n        {sweets.map((sweet) => (\n          <Sweet\n            key={sweet.id}\n            sweetObj={sweet}\n            isOwner={sweet.creatorId === userObj.uid}\n            creatorId={sweet.createdAt}\n            userObj={userObj}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { authService } from \"fbase\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { updateProfile } from \"@firebase/auth\";\n\nconst Profile = ({ userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (userObj.displayName != newDisplayName) {\n      updateProfile(userObj, { displayName: newDisplayName });\n    }\n    window.location.reload();\n  };\n\n  return (\n    <div className=\"container\">\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          border: \"grey solid\",\n          padding: \"20px\",\n          marginBottom: \"30px\",\n        }}\n      >\n        <h3>{userObj.displayName}님 안녕하세요!</h3>\n      </div>\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <div style={{ color: \"gray\" }}>닉네임 변경하기</div>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          autoFocus\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"결정\"\n          className=\"formBtn\"\n          style={{ margintTop: 10 }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        로그아웃\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser, faClock } from \"@fortawesome/free-regular-svg-icons\";\nimport logo from \"../clock.jpg\";\nimport { stringify } from \"@firebase/util\";\n\nconst Navigation = ({ userObj }) => {\n  const [page, setPage] = useState(\"\");\n\n  return (\n    <nav>\n      <ul\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n          marginTop: 50,\n        }}\n      >\n        <img src={logo} style={{ marginBottom: 0, width: \"5%\" }} />\n        {page === \"home\" ? (\n          <Link\n            to=\"/profile\"\n            style={{ position: \"relative\", top: \"10px\", right: \"-100px\" }}\n            onClick={() => setPage((prev) => \"profile\")}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"var(--main)\"} size=\"2x\" />\n          </Link>\n        ) : (\n          <Link\n            to=\"/\"\n            style={{ position: \"relative\", top: \"10px\", right: \"-100px\" }}\n            onClick={() => setPage((prev) => \"home\")}\n          >\n            <FontAwesomeIcon icon={faClock} color={\"var(--main)\"} size=\"2x\" />\n          </Link>\n        )}\n\n        {/* <li>\n          <Link to=\"/\" style={{ marginRight: 0 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />{\" \"}\n          </Link>\n        </li> */}\n        {/* <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              margintLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : \"profile\"}\n            </span>\n          </Link>\n        </li> */}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} />\n            </Route>\n          </div>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth userObj={userObj} />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setuserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(user);\n        setuserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? (\n        <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />\n      ) : (\n        \"initializing....\"\n      )}\n      <footer\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"30px\",\n        }}\n      >\n        &copy; {new Date().getFullYear()} Seondal{\" \"}\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./style.css\";\n\nconsole.log(\"firebase\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}