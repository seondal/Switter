{"version":3,"sources":["fbase.js","routes/Auth.js","components/Sweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","authService","initializeApp","getAuth","firebaseInstance","dbService","getFirestore","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSocialClick","event","a","name","target","provider","GoogleAuthProvider","auth","GithubAuthProvider","signInWithPopup","data","console","log","onChange","value","onSubmit","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Sweet","sweetObj","isOwner","editing","setEditing","text","newSweet","setNewSweet","toggleEditing","e","updateDoc","doc","id","ok","window","confirm","deleteDoc","Home","userObj","sweet","setSweet","sweets","setSweets","useEffect","onSnapshot","collection","snapshot","newArray","docs","map","document","addDoc","createdAt","Date","now","creatorId","uid","maxLength","Profile","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","location","reload","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setIsLoggedIn","setuserObj","onAuthStateChanged","user","getFullYear","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3b4de0f5.chunk.js","sourcesContent":["// import firebase from \"firebase/app\";\n// import \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// const app = initializeApp(firebaseConfig);\n// initializeApp(firebaseConfig);\n\n// firebaseConfig.initializeApp(firebaseConfig);\n// export const authService = firebase.auth();\n\nconst app = initializeApp(firebaseConfig);\nexport const authService = getAuth();\nexport const firebaseInstance = getAuth();\nexport const dbService = getFirestore();\n","import { authService, firebaseInstance } from \"fbase\";\nimport { useState } from \"react\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signInWithPopup,\n  GoogleAuthProvider,\n} from \"firebase/auth\";\n\nconst Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"anonymous\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    // const data = await signInWithPopup(authService, provider);\n    const data = await signInWithPopup(authService, provider);\n\n    console.log(data);\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault(); //새로고침 방지\n    try {\n      let data;\n      if (newAccount) {\n        //create newAccount\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n      } else {\n        //log in\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n        {error}\n      </form>\n      <button onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </button>\n      <button onClick={onSocialClick} name=\"google\">\n        Google로 시작하기\n      </button>\n      <button onClick={onSocialClick} name=\"anonymous\">\n        익명으로 시작하기\n      </button>\n    </div>\n  );\n};\n\nexport default Auth;\n","import { dbService } from \"fbase\";\nimport { doc, deleteDoc, updateDoc } from \"@firebase/firestore\";\nimport { useState } from \"react\";\n\nconst Sweet = ({ sweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newSweet, setNewSweet] = useState(sweetObj.text);\n\n  const onDeleteClick = () => {\n    const ok = window.confirm(\"삭제할거임?\");\n    console.log(ok);\n    if (ok) {\n      console.log(sweetObj.id);\n      deleteDoc(doc(dbService, \"sweets\", sweetObj.id));\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewSweet(value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    updateDoc(doc(dbService, \"sweets\", sweetObj.id), { text: newSweet });\n    setEditing(false);\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input onChange={onChange} value={newSweet} required />\n            <input type=\"submit\" value=\"Update Sweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{sweetObj.text}</h4>\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Sweet</button>\n              <button onClick={toggleEditing}>Edit Sweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Sweet;\n","import { useEffect, useState } from \"react\";\nimport { addDoc, getDocs, onSnapshot, collection } from \"firebase/firestore\";\nimport { dbService } from \"fbase\";\nimport Sweet from \"components/Sweet\";\n\nconst Home = ({ userObj }) => {\n  console.log(userObj);\n  const [sweet, setSweet] = useState(\"\");\n  const [sweets, setSweets] = useState([]);\n\n  // const getSweets = async () => {\n  //   const dbSweets = await getDocs(collection(dbService, \"sweets\"));\n  //   dbSweets.forEach((document) => {\n  //     const sweetObject = { ...document.data(), id: document.id };\n  //     setSweets((prev) => [sweetObject, ...prev]);\n  //   });\n  // };\n\n  useEffect(() => {\n    // getSweets();\n    onSnapshot(collection(dbService, \"sweets\"), (snapshot) => {\n      const newArray = snapshot.docs.map((document) => ({\n        id: document.id,\n        ...document.data(),\n      }));\n      setSweets(newArray);\n    });\n  }, []);\n\n  // collection(\"nweets\").onSnapshot((snpashot) => {\n  //   const newArray = snapshot.docs.map((document) => ({\n  //     id: document.id,\n  //     ...document.data(),\n  //   }));\n  //   setSweets(newArray);\n  // });\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await addDoc(collection(dbService, \"sweets\"), {\n      text: sweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n    });\n    setSweet(\"\");\n  };\n\n  const onChange = (event) => {\n    event.preventDefault();\n    const {\n      target: { value },\n    } = event;\n    setSweet(value);\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          value={sweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"Sweet\" />\n      </form>\n      <div>\n        {sweets.map((sweet) => (\n          <Sweet\n            key={sweet.id}\n            sweetObj={sweet}\n            isOwner={sweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import { authService } from \"fbase\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { updateProfile } from \"@firebase/auth\";\n\nconst Profile = ({ userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (e) => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (userObj.displayName != newDisplayName) {\n      updateProfile(userObj, { displayName: newDisplayName });\n    }\n    window.location.reload();\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n\nexport default Profile;\n","import { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">{userObj.displayName} 의 프로필 </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setuserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(user);\n        setuserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? (\n        <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />\n      ) : (\n        \"initializing....\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Switter </footer>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n\nconsole.log(\"firebase\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}